[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1 Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "32a4376ec58dcb18",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a9f7571b5ef7b8d",
        "type": "group",
        "z": "32a4376ec58dcb18",
        "name": "Control LED",
        "style": {
            "label": true
        },
        "nodes": [
            "7c319599489e5277",
            "d2b609c3233ed08a",
            "5d0e38fcecc83ec2",
            "5d7197a07568184e",
            "1807a467ef6b4fad",
            "419070db5845acbf",
            "98ccbe5c0eedbcf4",
            "3d1d12da6fbd4125",
            "ae0c0f015d23ba98",
            "fb4fe75db74665a6",
            "d5200202227d96e8",
            "f8fd87ffbfba9a24",
            "7508700f439bc40c",
            "6ab5db091ac5b6ee",
            "383852033fcb0b6d",
            "96b22366456b4125",
            "37d3beca8dd091b9",
            "73d56f8042f2a151",
            "dec643171e37a325",
            "90318b39c2fc2c62"
        ],
        "x": 54,
        "y": 639,
        "w": 932,
        "h": 562
    },
    {
        "id": "54f78cbe45083d94",
        "type": "group",
        "z": "32a4376ec58dcb18",
        "name": "Read system values and init system",
        "style": {
            "label": true
        },
        "nodes": [
            "a321c927ee625596",
            "4ec4f64c1a115e60",
            "bac6e123a3daaf96",
            "66a33b26115227f2",
            "adbe95ec700c6293",
            "a9e9ec4394db16b4",
            "3704c0b1c8051013",
            "d5ede394cd1c889c",
            "f986b052d651fd8b",
            "a9210a32079dd0c8",
            "c1e42e8d61c484c0"
        ],
        "x": 54,
        "y": 119,
        "w": 1272,
        "h": 182
    },
    {
        "id": "5c501fe6e7bfd77e",
        "type": "group",
        "z": "32a4376ec58dcb18",
        "name": "Store system values",
        "style": {
            "label": true
        },
        "nodes": [
            "6d6b3036a5fa4c20",
            "91c208aea12929f0",
            "c463710e40c9cd11",
            "2a80bb8858f15ce8",
            "e40a51f06523fc95",
            "4a4447fb478d3667",
            "7963d89aa5f323c3",
            "d55ee4c6c9f050d0"
        ],
        "x": 54,
        "y": 319,
        "w": 1272,
        "h": 122
    },
    {
        "id": "e8015cb1c017dae5",
        "type": "group",
        "z": "32a4376ec58dcb18",
        "name": "Switch all LEDs on || off",
        "style": {
            "label": true
        },
        "nodes": [
            "7edaae7ba7291cd2",
            "235f5909cc66ec21",
            "b030588348e11388",
            "ff793acd5c567a5f",
            "7f246cb19efaec9c",
            "d06e1728046938e3",
            "d20693912b4577d1",
            "7c51d03ac26e77ac",
            "9d0182927d842af0"
        ],
        "x": 54,
        "y": 459,
        "w": 812,
        "h": 162
    },
    {
        "id": "9df319e1d1200861",
        "type": "ui_tab",
        "name": "Übersicht",
        "icon": "mi-factory",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6ebc82b908cda624",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c53ebfb51f9f9121",
        "type": "ui_group",
        "name": "Nord",
        "tab": "9df319e1d1200861",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "19350ac37aa7543f",
        "type": "ui_tab",
        "name": "Lager-Nord",
        "icon": "mi-warehouse",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bb8c6be23845d33d",
        "type": "ui_group",
        "name": "Box-01",
        "tab": "19350ac37aa7543f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3e3ef172808e396",
        "type": "ui_group",
        "name": "Box-02",
        "tab": "19350ac37aa7543f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fcff1d7e9e4df06a",
        "type": "ui_tab",
        "name": "Lager-Süd",
        "icon": "mi-warehouse",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7e197a6ce2585433",
        "type": "ui_group",
        "name": "Box-01",
        "tab": "fcff1d7e9e4df06a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74826537ed6344b4",
        "type": "ui_group",
        "name": "Box-02",
        "tab": "fcff1d7e9e4df06a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fb1ade5341e8198",
        "type": "ui_group",
        "name": "Süd",
        "tab": "9df319e1d1200861",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "427e71050558f503",
        "type": "ui_group",
        "name": "Nord-Box02",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5fc5faed0145eee0",
        "type": "ui_group",
        "name": "Süd-Box01",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e6cb45f0731fcc3",
        "type": "ui_group",
        "name": "Süd-Box02",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d109e158f357676",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "mosquitto",
        "port": "8883",
        "tls": "54fb6980721a7449",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ad3e78a9.60d328",
        "type": "ui_group",
        "name": "Text",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "7",
        "collapse": false
    },
    {
        "id": "9c6ad719d03b2904",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "54fb6980721a7449",
        "type": "tls-config",
        "name": "CertNodeRed",
        "cert": "/data/server.crt",
        "key": "/data/server.key",
        "ca": "/data/ca.crt",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "257a61c0430a9cb3",
        "type": "ui_group",
        "name": "Room2 Chart",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0af03610d67f631b",
        "type": "ui_group",
        "name": "Room2 Gauge",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f92bcb415184ca4",
        "type": "ui_group",
        "name": "Room2 Control",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "92e3b52820d26ea1",
        "type": "ui_group",
        "name": "Room1 Chart",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f4c2a4d9359fbd1",
        "type": "ui_group",
        "name": "Room1 Gauge",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d9f6de851b9059cb",
        "type": "ui_group",
        "name": "Room1 Control",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "205fd73e.b5c718",
        "type": "ui_group",
        "name": "Computers",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0df4552f9d69039d",
        "type": "ui_group",
        "name": "DEFAULT",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "44",
        "collapse": false,
        "className": ""
    },
    {
        "id": "563dd05169796db4",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "03135708477a5329",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "2496cdb088a99593",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7046597aca6f4bc",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "691d685c94d19f4b",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "5a0a428098027461",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "167c0c367e37604a",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "c9629eabf8ae7938",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d829377e2d13b621",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "026c90302503b671",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d578d08bb99f7c12",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "6614e01dd494598b",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5174411e8449277",
        "type": "ui_group",
        "name": "System Steuerung",
        "tab": "9df319e1d1200861",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ba37fd4.6558f",
        "type": "ui_group",
        "name": "Example Flow",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "8b4eebb1.340838",
        "type": "ui_group",
        "name": "Formating Date",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "10"
    },
    {
        "id": "38b97bb0190bbc30",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7f58b6dfa741578",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "f0ae12d916a91f1c",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "Lagerstandsverlauf",
        "group": "bb8c6be23845d33d",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Lagerstandsverlauf",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "keine Daten",
        "dot": true,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a9791278dd922577",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bestellstatus:",
        "format": "{{msg.state}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "f6023a0733d7f836",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c53ebfb51f9f9121",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Box-01",
        "format": "",
        "layout": "row-spread",
        "className": "overviewTextN01",
        "style": true,
        "font": "",
        "fontSize": "26",
        "color": "#000000",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "b227048a804acde8",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c53ebfb51f9f9121",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Box-02",
        "format": "",
        "layout": "row-spread",
        "className": "overviewTextN02",
        "style": true,
        "font": "",
        "fontSize": "26",
        "color": "#000000",
        "x": 860,
        "y": 980,
        "wires": []
    },
    {
        "id": "e6878d37f9b33df5",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "1fb1ade5341e8198",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Box-02",
        "format": "",
        "layout": "row-spread",
        "className": "overviewTextS02",
        "style": true,
        "font": "",
        "fontSize": "26",
        "color": "#000000",
        "x": 1960,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ecc548979ce46956",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "group": "c53ebfb51f9f9121",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .overviewTextN01 {\n        color: {{msg.payload.setBoxColor}} !important;\n        font-weight: bold !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "f6023a0733d7f836",
                "92607bb771f41e87"
            ]
        ]
    },
    {
        "id": "0fac55db59ec7132",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "group": "c53ebfb51f9f9121",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .overviewTextN02 {\n        color: {{msg.payload.setBoxColor}} !important;\n        font-weight: bold !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 980,
        "wires": [
            [
                "b227048a804acde8"
            ]
        ]
    },
    {
        "id": "2b67a4766d1d918c",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "group": "1fb1ade5341e8198",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .overviewTextS02 {\n        color: {{msg.payload.setBoxColor}} !important;\n        font-weight: bold !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1800,
        "y": 1020,
        "wires": [
            [
                "e6878d37f9b33df5"
            ]
        ]
    },
    {
        "id": "02796594dea1bd6f",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "name": "link in 3",
        "links": [
            "3704c0b1c8051013",
            "3fc043f21258ef8f",
            "9d0182927d842af0",
            "a9210a32079dd0c8",
            "c04df3c0e2f685d2",
            "c426fec1a6fcdd81",
            "0113032f34852a75"
        ],
        "x": 145,
        "y": 260,
        "wires": [
            [
                "ea6ef44ce7633f80"
            ]
        ]
    },
    {
        "id": "d3e5de920bd662c8",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Material:",
        "format": "{{msg.payload.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 840,
        "y": 160,
        "wires": []
    },
    {
        "id": "6309a2cc44988f5f",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 19",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload = 0;\n    return msg;\n}\n\nelse if ((msg.weight != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n    \n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"ymin\": min, \"ymax\": max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null) {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (msg.payload < 0) {\n            msg.payload = 0;\n        }\n    } else {\n        msg.payload = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "f0ae12d916a91f1c"
            ]
        ]
    },
    {
        "id": "ea6ef44ce7633f80",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 20",
        "func": "const REGAL_NR = 0;\nconst BOX_NR = 0;\n\nvar data = global.get(\"data\");\n\nif (msg.payload.regalnr == REGAL_NR && msg.payload.boxnr == BOX_NR) {\n\n    if (msg.payload.init) {\n        if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == \"\" ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == 0) {\n           \n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"black\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n\n            msg.payload.dateoftare = null;\n            msg.weight = null;\n            msg.payload.tare = null;\n            msg.payload.color = \"black\";\n        } else {\n            msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n            msg.payload.tare = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;            \n            msg.payload.color = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color;\n        }\n        msg.regalnr = msg.payload.regalnr;\n        msg.boxnr = msg.payload.boxnr;\n        \n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"blue\";\n\n        msg.payload.time = null;\n        msg.weight = null;\n        msg.payload.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n        msg.payload.color = \"blue\";\n\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n        var time = Date.now();\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = time.toString;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = Number(msg.weight);\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"white\";\n\n        msg.payload.time = time;\n        msg.payload.tare = msg.weight;\n        msg.payload.color = \"white\";       \n\n    } else if (msg.weight != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false && \n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n        var boarder_min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max / 3;\n        var boarder_mid = boarder_min * 2;\n        boarder_min = Math.round(boarder_min * 1) / 1;\n        boarder_mid = Math.round(boarder_mid * 1) / 1;\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n\n        var weight = 0;\n        var pieces = 0;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n\n        if (msg.weight > 0) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n            var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n            var pieces = Math.round((weight / weightperpiece) * 1) / 1;            \n        }\n\n        if ((pieces >= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min || \n            pieces <= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min) && (pieces <= boarder_min)) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"red\";\n            msg.payload.color = \"red\";\n            if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != 4) {\n                data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 3;\n                msg.regalnr = msg.payload.regalnr;\n                msg.boxnr = msg.payload.boxnr;\n                msg.payload.alarmmessage = \"Kritischer Bestand in \" + data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description + \" im Regal: \" + msg.payload.regalnr + \" Box: \" + msg.payload.boxnr + \" !\";\n            }\n        } else if (pieces > boarder_min && pieces <= boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"yellow\";\n            msg.payload.color = \"yellow\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 2;\n\n        } else if (pieces > boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"green\";\n            msg.payload.color = \"green\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 1;\n        }\n    }\n    global.set(\"data\", data);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 260,
        "wires": [
            [
                "268b25637cece5f5",
                "40eef35607864548",
                "b9355ee80f24b943",
                "5473e909d23ceaa8",
                "6309a2cc44988f5f",
                "1868194fbc5dcf4e",
                "f1d5ba4dee117d8f",
                "876d88bff2324c8f",
                "dfda29a079239a62",
                "559a729ef37362bd"
            ]
        ]
    },
    {
        "id": "268b25637cece5f5",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 22",
        "func": "var data = global.get(\"data\");\n\nmsg.payload.description = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "d3e5de920bd662c8"
            ]
        ]
    },
    {
        "id": "b7c1b40f0807cfa7",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gewicht pro Stück:",
        "format": "{{msg.payload.piece}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "40eef35607864548",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 23",
        "func": "var data = global.get(\"data\");\n\n\nmsg.payload.piece = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece * 100) / 100;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "b7c1b40f0807cfa7"
            ]
        ]
    },
    {
        "id": "4cfd88e043d95761",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Aktuelles Gewicht:",
        "format": "{{msg.payload.weight}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "b9355ee80f24b943",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 24",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.weight = msg.weight;\n    return msg;\n}\n\nelse if (msg.weight != null || msg.payload.init == true) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated != true) {\n\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload.weight = Math.round(weight * 100) / 100;\n    } else {\n        msg.payload.weight = null;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "4cfd88e043d95761"
            ]
        ]
    },
    {
        "id": "fc8a46031f4e59e7",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierung:",
        "format": "{{msg.payload.tare}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "d6ae6da59b4f5977",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "bb8c6be23845d33d",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierungsdatum:",
        "format": "{{msg.payload.time | date:\"dd.MM.yyyy HH:mm\"}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 440,
        "wires": []
    },
    {
        "id": "5473e909d23ceaa8",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 25",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.value = 0;\n    return msg;\n}\n\nelse if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n\n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"min\":min, \"seg1\":Math.round(max/3), \"seg2\":Math.round(2*max/3), \"max\":max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n\n        var pieces = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (pieces < 0) {\n            msg.payload.value = 0;\n        } else {\n            msg.payload.value = pieces;\n        }\n\n    } else {\n        msg.payload.value = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "f2b539ed3672930f"
            ]
        ]
    },
    {
        "id": "f2b539ed3672930f",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "bb8c6be23845d33d",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Aktueller Lagerstand",
        "label": "Stk.",
        "format": "{{msg.payload.value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "1553cc8927085845",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "bb8c6be23845d33d",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Kalibrierung",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 650,
        "y": 500,
        "wires": [
            [
                "c77bc3b82007dc7d"
            ]
        ]
    },
    {
        "id": "c4db5ca158182d04",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Material:",
        "format": "{{msg.payload.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "83e19b9197a45b82",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "Lagerstandsverlauf",
        "group": "c3e3ef172808e396",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Lagerstandsverlauf",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "8534eedf1b0ccf65",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bestellstatus:",
        "format": "{{msg.state}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1180,
        "wires": []
    },
    {
        "id": "87f6b559e0812a8b",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gewicht pro Stück:",
        "format": "{{msg.payload.piece}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 1060,
        "wires": []
    },
    {
        "id": "76208439e8460f01",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Aktuelles Gewicht:",
        "format": "{{msg.payload.weight}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 1100,
        "wires": []
    },
    {
        "id": "140de69137217c16",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierung:",
        "format": "{{msg.payload.tare}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9814870640f9a9d8",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "c3e3ef172808e396",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierungsdatum:",
        "format": "{{msg.payload.time | date:\"dd.MM.yyyy HH:mm\"}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 820,
        "y": 1300,
        "wires": []
    },
    {
        "id": "440b05f04a1bd728",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "c3e3ef172808e396",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Aktueller Lagerstand",
        "label": "Stk.",
        "format": "{{msg.payload.value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 820,
        "y": 1140,
        "wires": []
    },
    {
        "id": "dd4b0eef5f71f04d",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "c3e3ef172808e396",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kalibrierung",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"regalnr\":0,\"boxnr\":1}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 650,
        "y": 1360,
        "wires": [
            [
                "16cfdf3377bd0f8c"
            ]
        ]
    },
    {
        "id": "aec30c78b29ec91e",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "name": "link in 4",
        "links": [
            "08a4f55b5e335467",
            "3704c0b1c8051013",
            "c04df3c0e2f685d2",
            "3fc043f21258ef8f",
            "c9f29e9a06129ae6",
            "a9210a32079dd0c8",
            "9d0182927d842af0",
            "a4d70e219e169152",
            "c426fec1a6fcdd81",
            "0113032f34852a75"
        ],
        "x": 165,
        "y": 1080,
        "wires": [
            [
                "7db4284f700ed112"
            ]
        ]
    },
    {
        "id": "3801cfd0fe451377",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "Lagerstandsverlauf",
        "group": "74826537ed6344b4",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Lagerstandsverlauf",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1930,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "0064ead898f28002",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bestellstatus:",
        "format": "{{msg.state}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1950,
        "y": 1220,
        "wires": []
    },
    {
        "id": "233cbcef25daba71",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "name": "link in 6",
        "links": [
            "08a4f55b5e335467",
            "3704c0b1c8051013",
            "c04df3c0e2f685d2",
            "3fc043f21258ef8f",
            "c9f29e9a06129ae6",
            "a9210a32079dd0c8",
            "9d0182927d842af0",
            "a4d70e219e169152",
            "c426fec1a6fcdd81",
            "0113032f34852a75"
        ],
        "x": 1255,
        "y": 1120,
        "wires": [
            [
                "5009725f7c0ebd14"
            ]
        ]
    },
    {
        "id": "ab86d4a162f42865",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Material:",
        "format": "{{msg.payload.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1960,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e71ff21c4e52b145",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gewicht pro Stück:",
        "format": "{{msg.payload.piece}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b4090cf225e569ee",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Aktuelles Gewicht:",
        "format": "{{msg.payload.weight}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d206b5776879d967",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierung:",
        "format": "{{msg.payload.tare}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1950,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ccc8016f14aa5cd9",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "74826537ed6344b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierungsdatum:",
        "format": "{{msg.payload.time | date:\"dd.MM.yyyy HH:mm\"}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1920,
        "y": 1340,
        "wires": []
    },
    {
        "id": "554aaa4c275ab913",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "74826537ed6344b4",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Aktueller Lagerstand",
        "label": "Stk.",
        "format": "{{msg.payload.value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1920,
        "y": 1180,
        "wires": []
    },
    {
        "id": "397adc9a2347cf3f",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "74826537ed6344b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kalibrierung",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"regalnr\":1,\"boxnr\":1}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1710,
        "y": 1420,
        "wires": [
            [
                "d2f66f0b619ad9c4"
            ]
        ]
    },
    {
        "id": "c77bc3b82007dc7d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 48",
        "func": "const REGAL_NR = 0;\nconst BOX_NR = 0;\n\nvar data = global.get(\"data\");\n\ndata.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = true;\nglobal.set(\"data\", data);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 500,
        "wires": [
            [
                "3fc043f21258ef8f"
            ]
        ]
    },
    {
        "id": "32256a52ba8c274f",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "1553cc8927085845"
            ]
        ]
    },
    {
        "id": "3fc043f21258ef8f",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "aec30c78b29ec91e",
            "391dec887b5fe329",
            "233cbcef25daba71"
        ],
        "x": 955,
        "y": 500,
        "wires": []
    },
    {
        "id": "1868194fbc5dcf4e",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 54",
        "func": "if (msg.payload.color != null) {\n    switch (msg.payload.color) {\n        case \"red\":\n            msg.payload.setBoxColor = \"rgb(255,0,0)\";\n            break;\n        case \"yellow\":\n            msg.payload.setBoxColor = \"rgb(255,255,0)\";\n            break;\n        case \"green\":\n            msg.payload.setBoxColor = \"rgb(0,255,0)\";\n            break;\n        case \"blue\":\n            msg.payload.setBoxColor = \"rgb(0,0,255)\";\n            break;\n        case \"white\":\n            msg.payload.setBoxColor = \"rgb(255,255,255)\";\n            break;\n        default:\n            msg.payload.setBoxColor = \"rgb(0,0,0)\";\n            break;\n    }\n    return msg; \n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "ecc548979ce46956",
                "dfaa680ed3908a15"
            ]
        ]
    },
    {
        "id": "876d88bff2324c8f",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "334c06621115c97c",
            "3d1d12da6fbd4125",
            "5d7197a07568184e"
        ],
        "x": 455,
        "y": 80,
        "wires": []
    },
    {
        "id": "f1d5ba4dee117d8f",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 50",
        "func": "var data = global.get(\"data\");\n\n\nif (msg.payload.init == true) {\n    msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n    if (msg.payload.tare != null) {\n        msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n    }\n    return msg;\n\n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n    \n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = false;   \n    msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n\n    global.set(\"data\", data);\n    return msg;\n}\n\n\n\n/*\nelse if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n}*/\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 400,
        "wires": [
            [
                "fc8a46031f4e59e7",
                "d6ae6da59b4f5977"
            ]
        ]
    },
    {
        "id": "479dfb722bcbb753",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "b962e23e4de4c320"
            ]
        ]
    },
    {
        "id": "72bfbce0a078809f",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Material Status",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.alarmmessage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "479dfb722bcbb753"
            ]
        ]
    },
    {
        "id": "b962e23e4de4c320",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Bestellstatus",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Haben sie schon nachbestellt?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 660,
        "wires": [
            [
                "a34a30af937cdd31"
            ]
        ]
    },
    {
        "id": "a34a30af937cdd31",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Nein",
        "cancel": "Ja",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1050,
        "y": 660,
        "wires": [
            [
                "d8aed1a123ce9ec7",
                "805d08f5c5c7fdda",
                "1374aa907f5fd57c"
            ]
        ]
    },
    {
        "id": "d8aed1a123ce9ec7",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 57",
        "func": "var data = global.get(\"data\");\n\nif (msg.payload == \"Ja\") {\n    data.Regal[msg.regalnr].Box[msg.boxnr].state.ordered = 4;\n    msg.payload.aendern = true;\n    global.set(\"data\", data);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 660,
        "wires": [
            [
                "11563a801db78ee4"
            ]
        ]
    },
    {
        "id": "4c2f4fcd7438d5ba",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "Lagerstandsverlauf",
        "group": "7e197a6ce2585433",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Lagerstandsverlauf",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "keine Daten",
        "dot": true,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "427d96375426b639",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bestellstatus:",
        "format": "{{msg.payload.state}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1770,
        "y": 320,
        "wires": []
    },
    {
        "id": "5a708494a45b4f11",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "1fb1ade5341e8198",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Box-01",
        "format": "",
        "layout": "row-spread",
        "className": "overviewTextS01",
        "style": true,
        "font": "",
        "fontSize": "26",
        "color": "#000000",
        "x": 1780,
        "y": 120,
        "wires": []
    },
    {
        "id": "d8931020b8e153bf",
        "type": "ui_template",
        "z": "f6f2187d.f17ca8",
        "group": "c53ebfb51f9f9121",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .overviewTextS01 {\n        color: {{msg.payload.setBoxColor}} !important;\n        font-weight: bold !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1620,
        "y": 120,
        "wires": [
            [
                "5a708494a45b4f11"
            ]
        ]
    },
    {
        "id": "b5fbb04e30777126",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "name": "link in 7",
        "links": [
            "08a4f55b5e335467",
            "3704c0b1c8051013",
            "c04df3c0e2f685d2",
            "a4d70e219e169152",
            "c9f29e9a06129ae6",
            "a9210a32079dd0c8",
            "9d0182927d842af0"
        ],
        "x": 1085,
        "y": 260,
        "wires": [
            [
                "08198bfe1fba9cd4"
            ]
        ]
    },
    {
        "id": "e9bab1ca1f988934",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Material:",
        "format": "{{msg.payload.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1780,
        "y": 160,
        "wires": []
    },
    {
        "id": "08198bfe1fba9cd4",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 60",
        "func": "const REGAL_NR = 1;\nconst BOX_NR = 0;\n\nvar data = global.get(\"data\");\n\nif (msg.payload.regalnr == REGAL_NR && msg.payload.boxnr == BOX_NR) {\n\n    if (msg.payload.init) {\n        if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == \"\" ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == 0) {\n           \n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"black\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n\n            msg.payload.dateoftare = null;\n            msg.weight = null;\n            msg.payload.tare = null;\n            msg.payload.color = \"black\";\n        } else {\n            msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n            msg.payload.tare = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;            \n            msg.payload.color = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color;\n        }\n        msg.regalnr = msg.payload.regalnr;\n        msg.boxnr = msg.payload.boxnr;\n        \n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"blue\";\n\n        msg.payload.time = null;\n        msg.weight = null;\n        msg.payload.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n        msg.payload.color = \"blue\";\n\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n        var time = Date.now();\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = time.toString;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = Number(msg.weight);\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"white\";\n\n        msg.payload.time = time;\n        msg.payload.tare = msg.weight;\n        msg.payload.color = \"white\";       \n\n    } else if (msg.weight != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false && \n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n        var boarder_min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max / 3;\n        var boarder_mid = boarder_min * 2;\n        boarder_min = Math.round(boarder_min * 1) / 1;\n        boarder_mid = Math.round(boarder_mid * 1) / 1;\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n\n        var weight = 0;\n        var pieces = 0;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n\n        if (msg.weight > 0) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n            var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n            var pieces = Math.round((weight / weightperpiece) * 1) / 1;            \n        }\n\n        if ((pieces >= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min || \n            pieces <= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min) && (pieces <= boarder_min)) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"red\";\n            msg.payload.color = \"red\";\n            if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != 4) {\n                data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 3;\n                msg.regalnr = msg.payload.regalnr;\n                msg.boxnr = msg.payload.boxnr;\n                msg.payload.alarmmessage = \"Kritischer Bestand in \" + data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description + \" im Regal: \" + msg.payload.regalnr + \" Box: \" + msg.payload.boxnr + \" !\";\n            }\n        } else if (pieces > boarder_min && pieces <= boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"yellow\";\n            msg.payload.color = \"yellow\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 2;\n\n        } else if (pieces > boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"green\";\n            msg.payload.color = \"green\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 1;\n        }\n    }\n    global.set(\"data\", data);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 260,
        "wires": [
            [
                "6a4fb1bb67287884",
                "423bedbce1641fa0",
                "e86a14eea21c9b44",
                "a6437880e70832dd",
                "9c88aa1cec7c0b54",
                "44e8fd93cbdacef2",
                "ca27f31d5a0ed576",
                "3706b52466504ded",
                "a2b1ca0e951db075"
            ]
        ]
    },
    {
        "id": "cc7671e0d99940cc",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gewicht pro Stück:",
        "format": "{{msg.payload.piece}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1750,
        "y": 200,
        "wires": []
    },
    {
        "id": "1f8291b20f623272",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Aktuelles Gewicht:",
        "format": "{{msg.payload.weight}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1750,
        "y": 240,
        "wires": []
    },
    {
        "id": "d437636236aeba08",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierung:",
        "format": "{{msg.payload.tare}} kg",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1770,
        "y": 400,
        "wires": []
    },
    {
        "id": "8c65878ca35b8724",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "7e197a6ce2585433",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kalibrierungsdatum:",
        "format": "{{msg.payload.time | date:\"dd.MM.yyyy HH:mm\"}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 440,
        "wires": []
    },
    {
        "id": "b64290730f4c2bcc",
        "type": "ui_gauge",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7e197a6ce2585433",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Aktueller Lagerstand",
        "label": "Stk.",
        "format": "{{msg.payload.value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1740,
        "y": 280,
        "wires": []
    },
    {
        "id": "ace682e1b2344553",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7e197a6ce2585433",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Kalibrierung",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1590,
        "y": 500,
        "wires": [
            [
                "940642aeba588239"
            ]
        ]
    },
    {
        "id": "940642aeba588239",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 65",
        "func": "const REGAL_NR = 1;\nconst BOX_NR = 0;\n\nvar data = global.get(\"data\");\n\ndata.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = true;\nglobal.set(\"data\", data);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 500,
        "wires": [
            [
                "a4d70e219e169152"
            ]
        ]
    },
    {
        "id": "07db633cf37e46a0",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1410,
        "y": 500,
        "wires": [
            [
                "ace682e1b2344553"
            ]
        ]
    },
    {
        "id": "a4d70e219e169152",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "b5fbb04e30777126",
            "aec30c78b29ec91e",
            "dd890f706c60f7c3",
            "233cbcef25daba71"
        ],
        "x": 1915,
        "y": 500,
        "wires": []
    },
    {
        "id": "6a4fb1bb67287884",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "334c06621115c97c",
            "3d1d12da6fbd4125",
            "5d7197a07568184e"
        ],
        "x": 1395,
        "y": 80,
        "wires": []
    },
    {
        "id": "57d36db60beb0d0d",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1910,
        "y": 640,
        "wires": []
    },
    {
        "id": "ba0b70958416c08b",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Bestellung abgeschlossen",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Das Material wurde nachbestellt.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 640,
        "wires": [
            [
                "57d36db60beb0d0d",
                "96d7ea6eafe2375e"
            ]
        ]
    },
    {
        "id": "805d08f5c5c7fdda",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ja",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Nein",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 660,
        "wires": [
            [
                "ba0b70958416c08b"
            ],
            [
                "78b2cf1d024cd7dd"
            ]
        ]
    },
    {
        "id": "78b2cf1d024cd7dd",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Nicht nachbestellt",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Das Material wurde nicht nachbestellt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 680,
        "wires": [
            [
                "5bceb4da8384d0f7",
                "49077507d5106a6a"
            ]
        ]
    },
    {
        "id": "5bceb4da8384d0f7",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1910,
        "y": 680,
        "wires": []
    },
    {
        "id": "8ba98ce8a58ff2ce",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "",
        "voice": "Google Deutsch",
        "always": true,
        "x": 1940,
        "y": 720,
        "wires": []
    },
    {
        "id": "49077507d5106a6a",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 77",
        "func": "msg.payload = \"Sie werden nochmal erinnert.\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 720,
        "wires": [
            [
                "8ba98ce8a58ff2ce"
            ]
        ]
    },
    {
        "id": "b5eb94b384fa0d7c",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "",
        "voice": "Google Deutsch",
        "always": true,
        "x": 1940,
        "y": 600,
        "wires": []
    },
    {
        "id": "96d7ea6eafe2375e",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 78",
        "func": "msg.payload = \"Sie werden nicht mehr erinnert.\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 600,
        "wires": [
            [
                "b5eb94b384fa0d7c"
            ]
        ]
    },
    {
        "id": "334c06621115c97c",
        "type": "link in",
        "z": "f6f2187d.f17ca8",
        "name": "message out",
        "links": [
            "876d88bff2324c8f",
            "6a4fb1bb67287884",
            "7f34968871d3014f",
            "07d779df6183ad60"
        ],
        "x": 305,
        "y": 660,
        "wires": [
            [
                "72bfbce0a078809f"
            ]
        ]
    },
    {
        "id": "dfda29a079239a62",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 79",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true ||\n    (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == null && msg.weight == null) ) {\n    msg.state = \"\";\n    return msg;\n} else if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != null && msg.weight != null) || \n        (msg.payload.init == true)) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 1) {\n        msg.state = \"vorrätig\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 2) {\n        msg.state = \"gering\"\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 3) {\n        msg.state = \"nachbestellen\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 4) {\n        msg.state = \"bestellt\";\n    }\n    return msg;\n}   \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "a9791278dd922577"
            ]
        ]
    },
    {
        "id": "11563a801db78ee4",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 800,
        "wires": []
    },
    {
        "id": "1374aa907f5fd57c",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 800,
        "wires": []
    },
    {
        "id": "022895bb600b555e",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 800,
        "wires": []
    },
    {
        "id": "2474e362bee03aa2",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.aendern",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "022895bb600b555e"
            ]
        ]
    },
    {
        "id": "92607bb771f41e87",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 60,
        "wires": []
    },
    {
        "id": "dfaa680ed3908a15",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 40,
        "wires": []
    },
    {
        "id": "559a729ef37362bd",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 40,
        "wires": []
    },
    {
        "id": "7db4284f700ed112",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 81",
        "func": "const REGAL_NR = 0;\nconst BOX_NR = 1;\n\nvar data = global.get(\"data\");\n\nif (msg.payload.regalnr == REGAL_NR && msg.payload.boxnr == BOX_NR) {\n\n    if (msg.payload.init) {\n        if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == \"\" ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == 0) {\n           \n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"black\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n\n            msg.payload.dateoftare = null;\n            msg.weight = null;\n            msg.payload.tare = null;\n            msg.payload.color = \"black\";\n        } else {\n            msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n            msg.payload.tare = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;            \n            msg.payload.color = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color;\n        }\n        msg.regalnr = msg.payload.regalnr;\n        msg.boxnr = msg.payload.boxnr;\n        \n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"blue\";\n\n        msg.payload.time = null;\n        msg.weight = null;\n        msg.payload.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n        msg.payload.color = \"blue\";\n\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n        var time = Date.now();\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = time.toString;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = Number(msg.weight);\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"white\";\n\n        msg.payload.time = time;\n        msg.payload.tare = msg.weight;\n        msg.payload.color = \"white\";       \n\n    } else if (msg.weight != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false && \n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n        var boarder_min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max / 3;\n        var boarder_mid = boarder_min * 2;\n        boarder_min = Math.round(boarder_min * 1) / 1;\n        boarder_mid = Math.round(boarder_mid * 1) / 1;\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n\n        var weight = 0;\n        var pieces = 0;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n\n        if (msg.weight > 0) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n            var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n            var pieces = Math.round((weight / weightperpiece) * 1) / 1;            \n        }\n\n        if ((pieces >= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min || \n            pieces <= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min) && (pieces <= boarder_min)) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"red\";\n            msg.payload.color = \"red\";\n            if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != 4) {\n                data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 3;\n                msg.regalnr = msg.payload.regalnr;\n                msg.boxnr = msg.payload.boxnr;\n                msg.payload.alarmmessage = \"Kritischer Bestand in \" + data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description + \" im Regal: \" + msg.payload.regalnr + \" Box: \" + msg.payload.boxnr + \" !\";\n            }\n        } else if (pieces > boarder_min && pieces <= boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"yellow\";\n            msg.payload.color = \"yellow\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 2;\n\n        } else if (pieces > boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"green\";\n            msg.payload.color = \"green\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 1;\n        }\n    }\n    global.set(\"data\", data);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "fef0da3bc47fcf3c",
                "b97621683f6fac1a",
                "cfdb2af08ed9701d",
                "a56fa9381253d02b",
                "6f154d2996c31dbc",
                "a1bd8bd5b0a75828",
                "f91b413fa07d8fda",
                "033c7a0ab66905a6",
                "7f34968871d3014f"
            ]
        ]
    },
    {
        "id": "a1bd8bd5b0a75828",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 82",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload = 0;\n    return msg;\n}\n\nelse if ((msg.weight != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n    \n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"ymin\": min, \"ymax\": max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null) {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (msg.payload < 0) {\n            msg.payload = 0;\n        }\n    } else {\n        msg.payload = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "83e19b9197a45b82"
            ]
        ]
    },
    {
        "id": "033c7a0ab66905a6",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 83",
        "func": "var data = global.get(\"data\");\n\nmsg.payload.description = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "c4db5ca158182d04"
            ]
        ]
    },
    {
        "id": "b97621683f6fac1a",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 84",
        "func": "var data = global.get(\"data\");\n\n\nmsg.payload.piece = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece * 100) / 100;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "87f6b559e0812a8b"
            ]
        ]
    },
    {
        "id": "cfdb2af08ed9701d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 85",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.weight = msg.weight;\n    return msg;\n}\n\nelse if (msg.weight != null || msg.payload.init == true) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated != true) {\n\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload.weight = Math.round(weight * 100) / 100;\n    } else {\n        msg.payload.weight = null;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1100,
        "wires": [
            [
                "76208439e8460f01"
            ]
        ]
    },
    {
        "id": "a56fa9381253d02b",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 86",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.value = 0;\n    return msg;\n}\n\nelse if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n\n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"min\":min, \"seg1\":Math.round(max/3), \"seg2\":Math.round(2*max/3), \"max\":max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n\n        var pieces = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (pieces < 0) {\n            msg.payload.value = 0;\n        } else {\n            msg.payload.value = pieces;\n        }\n\n    } else {\n        msg.payload.value = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "440b05f04a1bd728"
            ]
        ]
    },
    {
        "id": "fef0da3bc47fcf3c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 87",
        "func": "if (msg.payload.color != null) {\n    switch (msg.payload.color) {\n        case \"red\":\n            msg.payload.setBoxColor = \"rgb(255,0,0)\";\n            break;\n        case \"yellow\":\n            msg.payload.setBoxColor = \"rgb(255,255,0)\";\n            break;\n        case \"green\":\n            msg.payload.setBoxColor = \"rgb(0,255,0)\";\n            break;\n        case \"blue\":\n            msg.payload.setBoxColor = \"rgb(0,0,255)\";\n            break;\n        case \"white\":\n            msg.payload.setBoxColor = \"rgb(255,255,255)\";\n            break;\n        default:\n            msg.payload.setBoxColor = \"rgb(0,0,0)\";\n            break;\n    }\n    return msg; \n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 980,
        "wires": [
            [
                "0fac55db59ec7132"
            ]
        ]
    },
    {
        "id": "7f34968871d3014f",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "334c06621115c97c",
            "3d1d12da6fbd4125",
            "5d7197a07568184e"
        ],
        "x": 455,
        "y": 940,
        "wires": []
    },
    {
        "id": "f91b413fa07d8fda",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 88",
        "func": "var data = global.get(\"data\");\n\n\nif (msg.payload.init == true) {\n    msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n    if (msg.payload.tare != null) {\n        msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n    }\n    return msg;\n\n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n    \n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = false;   \n    msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n\n    global.set(\"data\", data);\n    return msg;\n}\n\n\n\n/*\nelse if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n}*/\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "140de69137217c16",
                "9814870640f9a9d8"
            ]
        ]
    },
    {
        "id": "6f154d2996c31dbc",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 89",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true ||\n    (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == null && msg.weight == null) ) {\n    msg.state = \"\";\n    return msg;\n} else if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != null && msg.weight != null) || \n        (msg.payload.init == true)) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 1) {\n        msg.state = \"vorrätig\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 2) {\n        msg.state = \"gering\"\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 3) {\n        msg.state = \"nachbestellen\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 4) {\n        msg.state = \"bestellt\";\n    }\n    return msg;\n}   \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "8534eedf1b0ccf65"
            ]
        ]
    },
    {
        "id": "250156ecf4527699",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 490,
        "y": 1360,
        "wires": [
            [
                "dd4b0eef5f71f04d"
            ]
        ]
    },
    {
        "id": "16cfdf3377bd0f8c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 90",
        "func": "const REGAL_NR = 0;\nconst BOX_NR = 1;\n\nvar data = global.get(\"data\");\n\ndata.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = true;\nglobal.set(\"data\", data);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1360,
        "wires": [
            [
                "c426fec1a6fcdd81"
            ]
        ]
    },
    {
        "id": "c426fec1a6fcdd81",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "aec30c78b29ec91e",
            "391dec887b5fe329",
            "233cbcef25daba71"
        ],
        "x": 945,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3706b52466504ded",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 91",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload = 0;\n    return msg;\n}\n\nelse if ((msg.weight != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n    \n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"ymin\": min, \"ymax\": max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null) {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (msg.payload < 0) {\n            msg.payload = 0;\n        }\n    } else {\n        msg.payload = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 360,
        "wires": [
            [
                "4c2f4fcd7438d5ba"
            ]
        ]
    },
    {
        "id": "e86a14eea21c9b44",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 92",
        "func": "var data = global.get(\"data\");\n\nmsg.payload.description = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 160,
        "wires": [
            [
                "e9bab1ca1f988934"
            ]
        ]
    },
    {
        "id": "a6437880e70832dd",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 93",
        "func": "var data = global.get(\"data\");\n\n\nmsg.payload.piece = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece * 100) / 100;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "cc7671e0d99940cc"
            ]
        ]
    },
    {
        "id": "9c88aa1cec7c0b54",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 94",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.weight = msg.weight;\n    return msg;\n}\n\nelse if (msg.weight != null || msg.payload.init == true) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated != true) {\n\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload.weight = Math.round(weight * 100) / 100;\n    } else {\n        msg.payload.weight = null;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 240,
        "wires": [
            [
                "1f8291b20f623272"
            ]
        ]
    },
    {
        "id": "44e8fd93cbdacef2",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 95",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.value = 0;\n    return msg;\n}\n\nelse if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n\n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"min\":min, \"seg1\":Math.round(max/3), \"seg2\":Math.round(2*max/3), \"max\":max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n\n        var pieces = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (pieces < 0) {\n            msg.payload.value = 0;\n        } else {\n            msg.payload.value = pieces;\n        }\n\n    } else {\n        msg.payload.value = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 280,
        "wires": [
            [
                "b64290730f4c2bcc"
            ]
        ]
    },
    {
        "id": "423bedbce1641fa0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 96",
        "func": "if (msg.payload.color != null) {\n    switch (msg.payload.color) {\n        case \"red\":\n            msg.payload.setBoxColor = \"rgb(255,0,0)\";\n            break;\n        case \"yellow\":\n            msg.payload.setBoxColor = \"rgb(255,255,0)\";\n            break;\n        case \"green\":\n            msg.payload.setBoxColor = \"rgb(0,255,0)\";\n            break;\n        case \"blue\":\n            msg.payload.setBoxColor = \"rgb(0,0,255)\";\n            break;\n        case \"white\":\n            msg.payload.setBoxColor = \"rgb(255,255,255)\";\n            break;\n        default:\n            msg.payload.setBoxColor = \"rgb(0,0,0)\";\n            break;\n    }\n    return msg; \n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "d8931020b8e153bf"
            ]
        ]
    },
    {
        "id": "a2b1ca0e951db075",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 97",
        "func": "var data = global.get(\"data\");\n\n\nif (msg.payload.init == true) {\n    msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n    if (msg.payload.tare != null) {\n        msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n    }\n    return msg;\n\n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n    \n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = false;   \n    msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n\n    global.set(\"data\", data);\n    return msg;\n}\n\n\n\n/*\nelse if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n}*/\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 400,
        "wires": [
            [
                "d437636236aeba08",
                "8c65878ca35b8724"
            ]
        ]
    },
    {
        "id": "ca27f31d5a0ed576",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 98",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true ||\n    (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == null && msg.weight == null) ) {\n    msg.state = \"\";\n    return msg;\n} else if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != null && msg.weight != null) || \n        (msg.payload.init == true)) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 1) {\n        msg.state = \"vorrätig\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 2) {\n        msg.state = \"gering\"\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 3) {\n        msg.state = \"nachbestellen\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 4) {\n        msg.state = \"bestellt\";\n    }\n    return msg;\n}   \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 320,
        "wires": [
            [
                "427d96375426b639"
            ]
        ]
    },
    {
        "id": "5009725f7c0ebd14",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 99",
        "func": "const REGAL_NR = 1;\nconst BOX_NR = 1;\n\nvar data = global.get(\"data\");\n\nif (msg.payload.regalnr == REGAL_NR && msg.payload.boxnr == BOX_NR) {\n\n    if (msg.payload.init) {\n        if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare == \"\" ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == null ||\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece == 0) {\n           \n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"black\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n\n            msg.payload.dateoftare = null;\n            msg.weight = null;\n            msg.payload.tare = null;\n            msg.payload.color = \"black\";\n        } else {\n            msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n            msg.payload.tare = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;            \n            msg.payload.color = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color;\n        }\n        msg.regalnr = msg.payload.regalnr;\n        msg.boxnr = msg.payload.boxnr;\n        \n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"blue\";\n\n        msg.payload.time = null;\n        msg.weight = null;\n        msg.payload.tare = null;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = null;\n        msg.payload.color = \"blue\";\n\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n        var time = Date.now();\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare = time.toString;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare = Number(msg.weight);\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"white\";\n\n        msg.payload.time = time;\n        msg.payload.tare = msg.weight;\n        msg.payload.color = \"white\";       \n\n    } else if (msg.weight != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false && \n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n               data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n        var boarder_min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max / 3;\n        var boarder_mid = boarder_min * 2;\n        boarder_min = Math.round(boarder_min * 1) / 1;\n        boarder_mid = Math.round(boarder_mid * 1) / 1;\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n\n        var weight = 0;\n        var pieces = 0;\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n\n        if (msg.weight > 0) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured = msg.weight;\n            var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n            var pieces = Math.round((weight / weightperpiece) * 1) / 1;            \n        }\n\n        if ((pieces >= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min || \n            pieces <= data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min) && (pieces <= boarder_min)) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"red\";\n            msg.payload.color = \"red\";\n            if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != 4) {\n                data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 3;\n                msg.regalnr = msg.payload.regalnr;\n                msg.boxnr = msg.payload.boxnr;\n                msg.payload.alarmmessage = \"Kritischer Bestand in \" + data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description + \" im Regal: \" + msg.payload.regalnr + \" Box: \" + msg.payload.boxnr + \" !\";\n            }\n        } else if (pieces > boarder_min && pieces <= boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"yellow\";\n            msg.payload.color = \"yellow\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 2;\n\n        } else if (pieces > boarder_mid) {\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = \"green\";\n            msg.payload.color = \"green\";\n            data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered = 1;\n        }\n    }\n    global.set(\"data\", data);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1120,
        "wires": [
            [
                "ee335f2a5eda02d8",
                "c8c99ef19aef4965",
                "1ef0106b124cb403",
                "eaf2ea48e59a0a7d",
                "f115ab3101568b9e",
                "693091fbc91ae3a2",
                "7f4f81d63abd1146",
                "0693a767c0b749d9",
                "07d779df6183ad60"
            ]
        ]
    },
    {
        "id": "693091fbc91ae3a2",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 100",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload = 0;\n    return msg;\n}\n\nelse if ((msg.weight != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n    \n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"ymin\": min, \"ymax\": max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null) {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (msg.payload < 0) {\n            msg.payload = 0;\n        }\n    } else {\n        msg.payload = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1260,
        "wires": [
            [
                "3801cfd0fe451377"
            ]
        ]
    },
    {
        "id": "0693a767c0b749d9",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 101",
        "func": "var data = global.get(\"data\");\n\nmsg.payload.description = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].description;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1060,
        "wires": [
            [
                "ab86d4a162f42865"
            ]
        ]
    },
    {
        "id": "c8c99ef19aef4965",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 102",
        "func": "var data = global.get(\"data\");\n\n\nmsg.payload.piece = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece * 100) / 100;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1100,
        "wires": [
            [
                "e71ff21c4e52b145"
            ]
        ]
    },
    {
        "id": "1ef0106b124cb403",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 103",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.weight = msg.weight;\n    return msg;\n}\n\nelse if (msg.weight != null || msg.payload.init == true) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\" &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated != true) {\n\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n        msg.payload.weight = Math.round(weight * 100) / 100;\n    } else {\n        msg.payload.weight = null;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1140,
        "wires": [
            [
                "b4090cf225e569ee"
            ]
        ]
    },
    {
        "id": "eaf2ea48e59a0a7d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 104",
        "func": "var data = global.get(\"data\");\n\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    msg.payload.value = 0;\n    return msg;\n}\n\nelse if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured != null && \n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == false) || msg.payload.init == true) {\n\n    var min = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.min;\n    var max = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dashboardSetup.max;\n    msg.ui_control = { \"min\":min, \"seg1\":Math.round(max/3), \"seg2\":Math.round(2*max/3), \"max\":max };\n\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare != null &&\n        data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare != \"\") {\n\n        var weightperpiece = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.piece;\n        var weight = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.measured - data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare;\n\n        var pieces = Math.round((weight / weightperpiece) * 1) / 1;\n\n        if (pieces < 0) {\n            msg.payload.value = 0;\n        } else {\n            msg.payload.value = pieces;\n        }\n\n    } else {\n        msg.payload.value = 0;\n    }\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1180,
        "wires": [
            [
                "554aaa4c275ab913"
            ]
        ]
    },
    {
        "id": "ee335f2a5eda02d8",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 105",
        "func": "if (msg.payload.color != null) {\n    switch (msg.payload.color) {\n        case \"red\":\n            msg.payload.setBoxColor = \"rgb(255,0,0)\";\n            break;\n        case \"yellow\":\n            msg.payload.setBoxColor = \"rgb(255,255,0)\";\n            break;\n        case \"green\":\n            msg.payload.setBoxColor = \"rgb(0,255,0)\";\n            break;\n        case \"blue\":\n            msg.payload.setBoxColor = \"rgb(0,0,255)\";\n            break;\n        case \"white\":\n            msg.payload.setBoxColor = \"rgb(255,255,255)\";\n            break;\n        default:\n            msg.payload.setBoxColor = \"rgb(0,0,0)\";\n            break;\n    }\n    return msg; \n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1020,
        "wires": [
            [
                "2b67a4766d1d918c"
            ]
        ]
    },
    {
        "id": "07d779df6183ad60",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "334c06621115c97c",
            "3d1d12da6fbd4125",
            "5d7197a07568184e"
        ],
        "x": 1555,
        "y": 980,
        "wires": []
    },
    {
        "id": "7f4f81d63abd1146",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 106",
        "func": "var data = global.get(\"data\");\n\n\nif (msg.payload.init == true) {\n    msg.payload.time = data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.dateoftare;\n    if (msg.payload.tare != null) {\n        msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n    }\n    return msg;\n\n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n    \n} else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = false;   \n    msg.payload.tare = Math.round(data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.tare * 10000) / 10000;\n\n    global.set(\"data\", data);\n    return msg;\n}\n\n\n\n/*\nelse if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true && msg.weight == null) {\n    return msg;\n}*/\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1300,
        "wires": [
            [
                "d206b5776879d967",
                "ccc8016f14aa5cd9"
            ]
        ]
    },
    {
        "id": "f115ab3101568b9e",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 107",
        "func": "var data = global.get(\"data\");\n\nif (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated == true ||\n    (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == null && msg.weight == null) ) {\n    msg.state = \"\";\n    return msg;\n} else if ((data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered != null && msg.weight != null) || \n        (msg.payload.init == true)) {\n    if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 1) {\n        msg.state = \"vorrätig\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 2) {\n        msg.state = \"gering\"\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 3) {\n        msg.state = \"nachbestellen\";\n    } else if (data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].state.ordered == 4) {\n        msg.state = \"bestellt\";\n    }\n    return msg;\n}   \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1220,
        "wires": [
            [
                "0064ead898f28002"
            ]
        ]
    },
    {
        "id": "d2f66f0b619ad9c4",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 108",
        "func": "const REGAL_NR = 1;\nconst BOX_NR = 1;\n\nvar data = global.get(\"data\");\n\ndata.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].weight.calibrated = true;\nglobal.set(\"data\", data);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1420,
        "wires": [
            [
                "0113032f34852a75"
            ]
        ]
    },
    {
        "id": "0113032f34852a75",
        "type": "link out",
        "z": "f6f2187d.f17ca8",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "aec30c78b29ec91e",
            "391dec887b5fe329",
            "233cbcef25daba71"
        ],
        "x": 2005,
        "y": 1420,
        "wires": []
    },
    {
        "id": "67104eb473a6e4fd",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1550,
        "y": 1420,
        "wires": [
            [
                "397adc9a2347cf3f"
            ]
        ]
    },
    {
        "id": "7c319599489e5277",
        "type": "http request",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "54fb6980721a7449",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 1000,
        "wires": [
            [
                "9141db09156ac426"
            ]
        ]
    },
    {
        "id": "d2b609c3233ed08a",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "function 2",
        "func": "var data = global.get(\"data\");\n\nvar regalnr = msg.payload.regalnr + 1;\nvar boxnr = msg.payload.boxnr + 1;\n\nmsg.url = data.control.communication.protocol + \"://\" + data.control.acme + regalnr + \":\" + data.control.communication.port + \"/\" +\n   data.control.cse + regalnr + \"/\" + data.control.ae + regalnr + data.control.ea + \"/\" + data.control.box + \n   boxnr + \"/\" + data.control.device.led.name + \"/\" + data.control.device.led.color.name;\n\nmsg.headers = {};\nmsg.headers['X-M2M-Origin'] = data.control.headers.user;\nmsg.headers['X-M2M-RI'] = Number(data.control.device.led.color.code.toString() + Date.now().toString());\nmsg.headers['X-M2M-RVI'] = data.control.headers.type;\nmsg.headers['Content-Type'] = data.control.headers.contenttype;\nmsg.headers['Accept'] = data.control.headers.accept;\n\nswitch (msg.payload.color) {\n   case \"red\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 255,\\\"green\\\": 0 ,\\\"blue\\\": 0}}\";\n      break;\n   case \"yellow\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 255,\\\"green\\\": 255,\\\"blue\\\": 0}}\";\n      break;\n   case \"green\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 0,\\\"green\\\": 255,\\\"blue\\\": 0}}\";\n      break;\n   case \"blue\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 0,\\\"green\\\": 0,\\\"blue\\\": 255}}\";\n      break;\n   case \"white\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 255,\\\"green\\\": 255,\\\"blue\\\": 255}}\";\n      break;\n   case \"black\":\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 0,\\\"green\\\": 0,\\\"blue\\\": 0}}\";\n      break;\n   default:\n      msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\": 0,\\\"green\\\": 0,\\\"blue\\\": 0}}\";\n      break;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "7c319599489e5277",
                "90318b39c2fc2c62"
            ]
        ]
    },
    {
        "id": "286ed8369b0d5cd1",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1440,
        "wires": []
    },
    {
        "id": "21fa50a67879f03d",
        "type": "http request",
        "z": "32a4376ec58dcb18",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "54fb6980721a7449",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 930,
        "y": 1440,
        "wires": [
            [
                "286ed8369b0d5cd1"
            ]
        ]
    },
    {
        "id": "64267ebb9ab30030",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "name": "function 3",
        "func": "var data = global.get(\"data\");\n\nvar regalnr = msg.payload.regalnr + 1;\nvar boxnr = msg.payload.boxnr + 1;\n\nmsg.url = data.control.communication.protocol + \"://\" + data.control.acme + regalnr + \":\" + data.control.communication.port + \"/\" +\n    data.control.cse + regalnr + \"/\" + data.control.ae + regalnr + data.control.ea + \"/\" + data.control.box +\n    boxnr + \"/\" + data.control.device.scale.name + \"/\" + data.control.device.scale.property.name;\n\nmsg.headers = {};\nmsg.headers['X-M2M-Origin'] = data.control.headers.user;\nmsg.headers['X-M2M-RI'] = Number(data.control.device.scale.property.code.toString() + Date.now().toString());\nmsg.headers['X-M2M-RVI'] = data.control.headers.type;\nmsg.headers['Content-Type'] = data.control.headers.contenttype;\nmsg.headers['Accept'] = data.control.headers.accept;\n\nmsg.payload = \"{\\\"cod:weigt\\\":{\\\"weigt\\\":\" + msg.payload.weight + \"}}\";\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1440,
        "wires": [
            [
                "21fa50a67879f03d"
            ]
        ]
    },
    {
        "id": "9b4a88aa8caae5da",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "tare",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"weight\":0.01}",
        "payloadType": "json",
        "x": 110,
        "y": 1440,
        "wires": [
            [
                "7caa3552795627ce"
            ]
        ]
    },
    {
        "id": "e8f29bf41a326447",
        "type": "http in",
        "z": "32a4376ec58dcb18",
        "name": "",
        "url": "/",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 370,
        "y": 1840,
        "wires": [
            [
                "888a7ca50062a170",
                "7be1eb9f95900f0e",
                "6c85ac486cb668a9",
                "630824f30a93f5da"
            ]
        ]
    },
    {
        "id": "6c85ac486cb668a9",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "name": "function 7",
        "func": "msg.payload = ''\nmsg.headers = {\n        'X-M2M-RSC': '2000',\n        'X-M2M-RI': msg.req.headers['x-m2m-ri']\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1840,
        "wires": [
            [
                "1230effcadc3e8ca",
                "50793f6e5a46fa6a"
            ]
        ]
    },
    {
        "id": "888a7ca50062a170",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7be1eb9f95900f0e",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.headers.x-m2m-ri",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1920,
        "wires": []
    },
    {
        "id": "1230effcadc3e8ca",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "headers",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1880,
        "wires": []
    },
    {
        "id": "5d0e38fcecc83ec2",
        "type": "comment",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Set LED color",
        "info": "",
        "x": 650,
        "y": 900,
        "wires": []
    },
    {
        "id": "970bd836d8074e8d",
        "type": "http request",
        "z": "32a4376ec58dcb18",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "54fb6980721a7449",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 2160,
        "wires": [
            [
                "b2548e75c5e3185b"
            ]
        ]
    },
    {
        "id": "971da2f97798c99a",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 2160,
        "wires": [
            [
                "93e44b374b2db968"
            ]
        ]
    },
    {
        "id": "b2548e75c5e3185b",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "d": true,
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 2160,
        "wires": []
    },
    {
        "id": "93e44b374b2db968",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "d": true,
        "name": "function 8",
        "func": "//msg.url = /* flow.get(\"PROTOCOL\") + \"://\" + flow.get(\"CSE\") + \":\" + flow.get(\"PORT\") + \"/\" + flow.get(\"EXTENSION\") + \"/\" + \n //         flow.get(\"AE\") + \"/\" + flow.get(\"BOX\") + \"/\" + flow.get(\"DEVICE_COLOR\");\n//\n\n//msg.url = flow.get(\"PROTOCOL\") + \"://\" + flow.get(\"CSE\") + \":\" + flow.get(\"PORT\") + \"/\" + \n\n\n//msg.url = \"https://acme-regal-1:8080/sub525637488\";\n//msg.url = \"https://acme-regal-1:8080/sub525637488\";\nmsg.url = \"https://acme-in:8080/~/id-asn/sub525637488\";\n\n\nmsg.url = flow.get(\"PROTOCOL\") + \"://\" + flow.get(\"ACME_IN\") + \":\" + flow.get(\"PORT\") + \"/~/\" + \n\n//pi --> Box\n\n\n\n\nmsg.headers = {};\nmsg.headers['X-M2M-Origin'] = flow.get(\"USER_SCALE\");\nmsg.headers['X-M2M-RI'] = flow.get(\"CODE_SCALE\"); // 103++RandomApplicationIDTimestamp\nmsg.headers['X-M2M-RVI'] = flow.get(\"TYPE_SCALE\");\nmsg.headers['Content-Type'] = flow.get(\"CONTENT-TYPE_SCALE\");\nmsg.headers['Accept'] = flow.get(\"ACCEPT_SCALE\");\n\n//msg.payload = \"{\\\"cod:color\\\":{\\\"red\\\":\" + msg.payload[\"red\"] + \",\\\"green\\\":\" + msg.payload[\"green\"] + \",\\\"blue\\\":\" + msg.payload[\"blue\"] + \"}}\";\n//msg.payload = \"\"\n\n/*\n'X-M2M-Origin': originator,\n'X-M2M-RI': requestIdentifier,\n'X-M2M-RVI': releaseVersionIndicator,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n*/\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2160,
        "wires": [
            [
                "970bd836d8074e8d"
            ]
        ]
    },
    {
        "id": "5b2ac23fc6bfa317",
        "type": "comment",
        "z": "32a4376ec58dcb18",
        "name": "Get Weight",
        "info": "",
        "x": 380,
        "y": 1780,
        "wires": []
    },
    {
        "id": "f999bbe692b50a86",
        "type": "comment",
        "z": "32a4376ec58dcb18",
        "name": "Get Weight @Test Only",
        "info": "",
        "x": 140,
        "y": 1320,
        "wires": []
    },
    {
        "id": "630824f30a93f5da",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "name": "function 9",
        "func": "var data = global.get(\"data\");\n\nmsg.headers = {};\nmsg.headers['X-M2M-Origin'] = data.control.headers.user;\nmsg.headers['X-M2M-RI'] = Number(data.control.device.scale.property.code.toString() + Date.now().toString());\nmsg.headers['X-M2M-RVI'] = data.control.headers.type;\nmsg.headers['Content-Type'] = data.control.headers.contenttype;\nmsg.headers['Accept'] = data.control.headers.accept;\n\n\nmsg.url =  data.control.communication.protocol + \"://\" + data.control.notification.acmein + \":\" + data.control.communication.port + \"/\" +\n           \"~\" + msg.payload[\"m2m:sgn\"].sur;\nmsg.weight = msg.payload[\"m2m:sgn\"].nev.rep[\"cod:weigt\"].weigt;\n\n\nvar regalname = msg.payload[\"m2m:sgn\"].sur;\n\nmsg.payload = '';\n\nmsg.regalname = regalname;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1960,
        "wires": [
            [
                "751eec616ba6cb52",
                "0c643208913b83ab"
            ]
        ]
    },
    {
        "id": "751eec616ba6cb52",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 2000,
        "wires": []
    },
    {
        "id": "0c643208913b83ab",
        "type": "http request",
        "z": "32a4376ec58dcb18",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "54fb6980721a7449",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 1960,
        "wires": [
            [
                "7b6362c6a8783c2a",
                "61a17842236f1081"
            ]
        ]
    },
    {
        "id": "7b6362c6a8783c2a",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 2000,
        "wires": []
    },
    {
        "id": "e70e400431f477bb",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 2000,
        "wires": []
    },
    {
        "id": "61a17842236f1081",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "name": "function 10",
        "func": "var re = new RegExp(\"(?<=regal-)[0-9]+(?=\\/)\");\nvar regalnr = Number(re.exec(msg.url)) - 1;\n\nre = new RegExp(\"(?<=Box)[0-9]+(?=SubscriptionDeviceScaleWeight)\");\nvar boxnr = Number(re.exec(msg.payload)) - 1;\n\nmsg.payload = {};\nmsg.payload.regalnr = regalnr;\nmsg.payload.boxnr = boxnr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1960,
        "wires": [
            [
                "e70e400431f477bb",
                "c04df3c0e2f685d2"
            ]
        ]
    },
    {
        "id": "50793f6e5a46fa6a",
        "type": "http response",
        "z": "32a4376ec58dcb18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a321c927ee625596",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "4ec4f64c1a115e60"
            ]
        ]
    },
    {
        "id": "4ec4f64c1a115e60",
        "type": "file in",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "",
        "filename": "/data/data.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "66a33b26115227f2"
            ]
        ]
    },
    {
        "id": "bac6e123a3daaf96",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "init LED - on/off",
        "func": "var data = global.get(\"data\");\n\nvar msgCollection = [];\n\nvar index = 0;\n\nfor (var regal_index = 0; regal_index < data.Regal.length; regal_index++) {\n    for (var boxen_index = 0; boxen_index < data.Regal[regal_index].Box.length; boxen_index++) {\n      \n        msgCollection[index] = {regalnr: regal_index, boxnr: boxen_index, \n                            onoff: data.Regal[regal_index].Box[boxen_index].LED.onoff};\n        index++;\n    }\n}\n\nmsg.payload = msgCollection;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 220,
        "wires": [
            [
                "adbe95ec700c6293"
            ]
        ]
    },
    {
        "id": "66a33b26115227f2",
        "type": "json",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "a9e9ec4394db16b4"
            ]
        ]
    },
    {
        "id": "adbe95ec700c6293",
        "type": "split",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "3704c0b1c8051013",
                "c1e42e8d61c484c0"
            ]
        ]
    },
    {
        "id": "a9e9ec4394db16b4",
        "type": "change",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "bac6e123a3daaf96",
                "d5ede394cd1c889c"
            ]
        ]
    },
    {
        "id": "3704c0b1c8051013",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "led onoff",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "233cbcef25daba71",
            "aec30c78b29ec91e",
            "b5fbb04e30777126"
        ],
        "x": 1225,
        "y": 220,
        "wires": []
    },
    {
        "id": "c04df3c0e2f685d2",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "aec30c78b29ec91e",
            "391dec887b5fe329",
            "233cbcef25daba71",
            "b5fbb04e30777126",
            "dd890f706c60f7c3"
        ],
        "x": 1015,
        "y": 1960,
        "wires": []
    },
    {
        "id": "6d6b3036a5fa4c20",
        "type": "ui_button",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "",
        "group": "d5174411e8449277",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Status Speichern",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "91c208aea12929f0"
            ]
        ]
    },
    {
        "id": "91c208aea12929f0",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "function 49",
        "func": "msg.payload = global.get(\"data\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": [
            [
                "e40a51f06523fc95"
            ]
        ]
    },
    {
        "id": "c463710e40c9cd11",
        "type": "file",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "",
        "filename": "/data/data.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 860,
        "y": 400,
        "wires": [
            [
                "d55ee4c6c9f050d0"
            ]
        ]
    },
    {
        "id": "e40a51f06523fc95",
        "type": "json",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 690,
        "y": 400,
        "wires": [
            [
                "c463710e40c9cd11"
            ]
        ]
    },
    {
        "id": "c1e42e8d61c484c0",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 160,
        "wires": []
    },
    {
        "id": "7edaae7ba7291cd2",
        "type": "ui_button",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "",
        "group": "d5174411e8449277",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Alle LEDs ausschalten",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "b030588348e11388"
            ]
        ]
    },
    {
        "id": "2a80bb8858f15ce8",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "6d6b3036a5fa4c20"
            ]
        ]
    },
    {
        "id": "235f5909cc66ec21",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "7edaae7ba7291cd2"
            ]
        ]
    },
    {
        "id": "b030588348e11388",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "function 51",
        "func": "var data = global.get(\"data\");\n\nvar msgCollection = [];\n\nvar index = 0;\n\nfor (var regal_index = 0; regal_index < data.Regal.length; regal_index++) {\n    for (var boxen_index = 0; boxen_index < data.Regal[regal_index].Box.length; boxen_index++) {\n\n        msgCollection[index] = {\n            regalnr: regal_index, boxnr: boxen_index,\n            onoff: false\n        };\n        index++;\n    }\n}\n\nmsg.payload = msgCollection;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 580,
        "wires": [
            [
                "7c51d03ac26e77ac"
            ]
        ]
    },
    {
        "id": "ff793acd5c567a5f",
        "type": "ui_button",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "",
        "group": "d5174411e8449277",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Alle LEDs einschalten",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "d06e1728046938e3"
            ]
        ]
    },
    {
        "id": "7f246cb19efaec9c",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "ff793acd5c567a5f"
            ]
        ]
    },
    {
        "id": "d06e1728046938e3",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "function 52",
        "func": "var data = global.get(\"data\");\n\nvar msgCollection = [];\n\nvar index = 0;\n\nfor (var regal_index = 0; regal_index < data.Regal.length; regal_index++) {\n    for (var boxen_index = 0; boxen_index < data.Regal[regal_index].Box.length; boxen_index++) {\n\n        msgCollection[index] = {\n            regalnr: regal_index, boxnr: boxen_index,\n            onoff: true\n        };\n        index++;\n    }\n}\n\nmsg.payload = msgCollection;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 540,
        "wires": [
            [
                "7c51d03ac26e77ac"
            ]
        ]
    },
    {
        "id": "d20693912b4577d1",
        "type": "ui_text",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "group": "d5174411e8449277",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "LED",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 500,
        "wires": []
    },
    {
        "id": "4a4447fb478d3667",
        "type": "ui_text",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "group": "d5174411e8449277",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 310,
        "y": 360,
        "wires": []
    },
    {
        "id": "40ee02817104e6d3",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "6.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"weight\":6.1}",
        "payloadType": "json",
        "x": 110,
        "y": 1560,
        "wires": [
            [
                "7caa3552795627ce"
            ]
        ]
    },
    {
        "id": "260cd095bae54f4c",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "8.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"weight\":8.1}",
        "payloadType": "json",
        "x": 110,
        "y": 1620,
        "wires": [
            [
                "7caa3552795627ce"
            ]
        ]
    },
    {
        "id": "5d7197a07568184e",
        "type": "link in",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "set new LED color",
        "links": [
            "6a4fb1bb67287884",
            "a6bf475ba4f09f85",
            "876d88bff2324c8f",
            "7f34968871d3014f",
            "07d779df6183ad60"
        ],
        "x": 205,
        "y": 1000,
        "wires": [
            [
                "dec643171e37a325"
            ]
        ]
    },
    {
        "id": "bf9857aee7662784",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "0.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"weight\":0.1}",
        "payloadType": "json",
        "x": 110,
        "y": 1500,
        "wires": [
            [
                "7caa3552795627ce"
            ]
        ]
    },
    {
        "id": "7963d89aa5f323c3",
        "type": "ui_toast",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d55ee4c6c9f050d0",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5c501fe6e7bfd77e",
        "name": "function 56",
        "func": "msg.payload = \"Status gespeichert.\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 400,
        "wires": [
            [
                "7963d89aa5f323c3"
            ]
        ]
    },
    {
        "id": "d5ede394cd1c889c",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "init",
        "func": "var data = global.get(\"data\");\n\nvar msgCollection = [];\n\nvar index = 0;\n\nfor (var regal_index = 0; regal_index < data.Regal.length; regal_index++) {\n    for (var boxen_index = 0; boxen_index < data.Regal[regal_index].Box.length; boxen_index++) {\n      \n        msgCollection[index] = {regalnr: regal_index, boxnr: boxen_index,\n                                init: true,\n                                measurement: data.Regal[regal_index].Box[boxen_index].weight.measured,\n                                tare: data.Regal[regal_index].Box[boxen_index].weight.tare,\n                                time: data.Regal[regal_index].Box[boxen_index].weight.dateoftare\n                            };\n        index++;\n    }\n}\n\n\n\nmsg.payload = msgCollection;\n// msg.payload.regalindex = regal_index;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 260,
        "wires": [
            [
                "f986b052d651fd8b"
            ]
        ]
    },
    {
        "id": "f986b052d651fd8b",
        "type": "split",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "a9210a32079dd0c8",
                "110a5fc7b2e572ff"
            ]
        ]
    },
    {
        "id": "a9210a32079dd0c8",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "g": "54f78cbe45083d94",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "233cbcef25daba71",
            "aec30c78b29ec91e",
            "b5fbb04e30777126"
        ],
        "x": 1225,
        "y": 260,
        "wires": []
    },
    {
        "id": "7c51d03ac26e77ac",
        "type": "split",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 560,
        "wires": [
            [
                "9d0182927d842af0"
            ]
        ]
    },
    {
        "id": "1807a467ef6b4fad",
        "type": "http request",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "54fb6980721a7449",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "419070db5845acbf",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "function 6",
        "func": "var data = global.get(\"data\");\n\nvar regalnr = msg.payload.regalnr + 1;\nvar boxnr = msg.payload.boxnr + 1;\n\nmsg.url = data.control.communication.protocol + \"://\" + data.control.acme + regalnr + \":\" + data.control.communication.port + \"/\" +\n   data.control.cse + regalnr + \"/\" + data.control.ae + regalnr + data.control.ea + \"/\" + data.control.box + \n   boxnr + \"/\" + data.control.device.led.name + \"/\" + data.control.device.led.breaker.name;\n\nmsg.headers = {};\nmsg.headers['X-M2M-Origin'] = data.control.headers.user;\nmsg.headers['X-M2M-RI'] = Number(data.control.device.led.breaker.code.toString() + Date.now().toString());\nmsg.headers['X-M2M-RVI'] = data.control.headers.type;\nmsg.headers['Content-Type'] = data.control.headers.contenttype;\nmsg.headers['Accept'] = data.control.headers.accept;\n\n\nmsg.payload = \"{\\\"cod:binSh\\\":{\\\"powSe\\\":\" + msg.payload.onoff + \"}}\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 780,
        "wires": [
            [
                "1807a467ef6b4fad"
            ]
        ]
    },
    {
        "id": "98ccbe5c0eedbcf4",
        "type": "comment",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "On/Off LED",
        "info": "",
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "3d1d12da6fbd4125",
        "type": "link in",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "set new LED onoff",
        "links": [
            "876d88bff2324c8f",
            "6a4fb1bb67287884",
            "7f34968871d3014f",
            "07d779df6183ad60"
        ],
        "x": 205,
        "y": 780,
        "wires": [
            [
                "73d56f8042f2a151"
            ]
        ]
    },
    {
        "id": "9d0182927d842af0",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "g": "e8015cb1c017dae5",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "02796594dea1bd6f",
            "233cbcef25daba71",
            "391dec887b5fe329",
            "aec30c78b29ec91e",
            "b5fbb04e30777126",
            "dd890f706c60f7c3"
        ],
        "x": 825,
        "y": 560,
        "wires": []
    },
    {
        "id": "ae0c0f015d23ba98",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 0 box: 0 LED to color RED",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"color\":\"red\"}",
        "payloadType": "json",
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "d2b609c3233ed08a"
            ]
        ]
    },
    {
        "id": "fb4fe75db74665a6",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 0 box: 0 LED to color Yellow",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"color\":\"yellow\"}",
        "payloadType": "json",
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "d2b609c3233ed08a"
            ]
        ]
    },
    {
        "id": "d5200202227d96e8",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 0 box: 0 LED to onoff true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"onoff\": true}",
        "payloadType": "json",
        "x": 240,
        "y": 820,
        "wires": [
            [
                "419070db5845acbf"
            ]
        ]
    },
    {
        "id": "f8fd87ffbfba9a24",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 0 box: 0 LED to onoff false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":0,\"boxnr\":0,\"onoff\": false}",
        "payloadType": "json",
        "x": 250,
        "y": 860,
        "wires": [
            [
                "419070db5845acbf"
            ]
        ]
    },
    {
        "id": "7508700f439bc40c",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 900,
        "wires": []
    },
    {
        "id": "383852033fcb0b6d",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 1 box: 0 LED to color RED",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"color\":\"red\"}",
        "payloadType": "json",
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "d2b609c3233ed08a"
            ]
        ]
    },
    {
        "id": "6ab5db091ac5b6ee",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 1 box: 0 LED to color Yellow",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"color\":\"yellow\"}",
        "payloadType": "json",
        "x": 250,
        "y": 1120,
        "wires": [
            [
                "d2b609c3233ed08a"
            ]
        ]
    },
    {
        "id": "96b22366456b4125",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 1 box: 0 LED to onoff true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"onoff\": true}",
        "payloadType": "json",
        "x": 240,
        "y": 900,
        "wires": [
            [
                "419070db5845acbf"
            ]
        ]
    },
    {
        "id": "37d3beca8dd091b9",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "Force reg: 1 box: 0 LED to onoff false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"onoff\": false}",
        "payloadType": "json",
        "x": 250,
        "y": 940,
        "wires": [
            [
                "419070db5845acbf"
            ]
        ]
    },
    {
        "id": "71b10d48dbfaef09",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "tare",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"weight\":0.01}",
        "payloadType": "json",
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "34afdf78c13847bd"
            ]
        ]
    },
    {
        "id": "743837f11556105b",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "6.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"weight\":6.1}",
        "payloadType": "json",
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "34afdf78c13847bd"
            ]
        ]
    },
    {
        "id": "fc807dd35a1e1ada",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "8.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"weight\":8.1}",
        "payloadType": "json",
        "x": 390,
        "y": 1620,
        "wires": [
            [
                "34afdf78c13847bd"
            ]
        ]
    },
    {
        "id": "182cec2d08c04b42",
        "type": "inject",
        "z": "32a4376ec58dcb18",
        "name": "3.1 kg",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "4",
        "topic": "",
        "payload": "{\"regalnr\":1,\"boxnr\":0,\"weight\":3.1}",
        "payloadType": "json",
        "x": 390,
        "y": 1500,
        "wires": [
            [
                "34afdf78c13847bd"
            ]
        ]
    },
    {
        "id": "675fd85c552ebad3",
        "type": "link in",
        "z": "32a4376ec58dcb18",
        "name": "Scale force test",
        "links": [
            "34afdf78c13847bd",
            "7caa3552795627ce"
        ],
        "x": 655,
        "y": 1440,
        "wires": [
            [
                "64267ebb9ab30030"
            ]
        ]
    },
    {
        "id": "34afdf78c13847bd",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "675fd85c552ebad3"
        ],
        "x": 515,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7caa3552795627ce",
        "type": "link out",
        "z": "32a4376ec58dcb18",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "675fd85c552ebad3"
        ],
        "x": 235,
        "y": 1440,
        "wires": []
    },
    {
        "id": "110a5fc7b2e572ff",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 320,
        "wires": []
    },
    {
        "id": "73d56f8042f2a151",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "function 15",
        "func": "var data = global.get(\"data\");\n\nif (msg.payload.onoff != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.onoff = msg.payload.onoff;\n    global.set(\"data\", data);\n    return msg\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 780,
        "wires": [
            [
                "419070db5845acbf"
            ]
        ]
    },
    {
        "id": "dec643171e37a325",
        "type": "function",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "function 53",
        "func": "var data = global.get(\"data\");\n\nif (msg.payload.color != null) {\n    data.Regal[msg.payload.regalnr].Box[msg.payload.boxnr].LED.color = msg.payload.color;\n    global.set(\"data\", data);\n    return msg\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "d2b609c3233ed08a",
                "7508700f439bc40c"
            ]
        ]
    },
    {
        "id": "90318b39c2fc2c62",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "g": "5a9f7571b5ef7b8d",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9141db09156ac426",
        "type": "debug",
        "z": "32a4376ec58dcb18",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1000,
        "wires": []
    }
]